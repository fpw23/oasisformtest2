{"version":3,"sources":["Controls/Core/Col.js","Controls/Core/Row.js","Controls/Core/FormBoxContext.js","Controls/Core/FieldLayoutBox.js","Controls/Core/FieldValueConverters.js","Controls/Core/CheckBox.js","Controls/Core/Formatters/BooleanFormatter.js","Controls/Core/FormBox.js","Controls/Core/DelayInput/DelayInput.js","Controls/Core/TextBox.js","Controls/Core/getPropChanges.js","Controls/Core/ComboBox.js","Controls/Core/CatchError.js","Controls/DynamicForm.js","App.js","serviceWorker.js","Redux/store.js","index.js"],"names":["RSCol","reactstrap","Col","hide","children","layout","rest","RSRow","Row","FormBoxContext","React","createContext","loading","readonly","componentEffects","FieldLayoutSizes","Full","sm","md","lg","xl","Half","Third","Quarter","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Eleven","Middle","size","offset","FieldLayoutBox","this","props","id","meta","label","caption","input","value","onChange","onBlur","name","onFocus","placeHolder","isCheckBox","formGroupProps","context","contextReadonly","effectReadOnly","effectHide","_","has","showError","errorMessage","touched","invalid","error","isArray","console","log","ctrl","active","classNamePrefix","styles","wrapper","overlay","opacity","content","spinner","fieldLayout","FormGroup","check","Label","Fragment","FormText","colStyle","display","alignItems","style","Component","contextType","defaultProps","FieldValueConverters","Boolean","Int","Number","TimeZoneData","CascaderData","Date","TextUpper","TextLower","TextNoSpaces","TextArray","Text","FieldValueFormatter","formatter","isString","v","n","isBoolean","moment","isMoment","isDate","undefined","Error","parseInt","parts","split","firstPart","shift","join","toString","FieldValueParser","parser","toDate","last","toUpper","toLower","replace","walkOptions","options","searchValue","collectedData","propNames","option","valueProp","push","pick","textProp","childrenProp","LookupValueFormatter","Keys","searchOptions","clone","displayValues","searchOption","length","map","CheckBoxClass","readonlyTrueValue","readonlyFalseValue","formattedValue","trueValue","falseValue","BooleanFormatter","Input","type","readOnly","disabled","checked","CheckBox","parse","format","fieldType","Field","component","FormBoxPlain","dispatch","form","submit","onCancel","handleSubmit","onSubmit","className","Provider","Form","e","preventDefault","ref","onFormUnmount","destroyOnUnmount","hideLoadingImage","simpleBody","FormBox","reduxForm","enableReinitialize","DebounceInput","event","persist","oldValue","state","minLength","setState","target","notify","onKeyDown","key","forceNotify","createNotifier","debounceTimeout","doNotify","debouncedChangeFunc","debounce","isDebouncing","flush","cancel","prevProps","oldTimeout","stateValue","maybeOnKeyDown","maybeOnBlur","element","forceNotifyByEnter","forceNotifyOnBlur","inputRef","maybeRef","createElement","PureComponent","TextBoxClass","delay","inputType","delayTimeout","placeholder","bind","TextBox","getPropChanges","path","current","previous","defaultValue","cur","get","pre","Current","Previous","HasChanged","ComboBoxClass","autosetComplete","optionsAvailable","prevOptions","prevOptionsAvailable","currOptions","autosetFirstOption","currOptionsAvailable","initial","firstOption","o","i","valuePropValue","textPropValue","noOptionsText","renderOptions","ComboBox","CatchError","hasError","info","onClick","message","stack","componentStack","renderError","DynamicForm","parseDefinition","Definition","ret","definitions","errors","JSON","err","buildDefinition","nodes","def","buildDefinitionElement","childDef","defProps","C","test","bodyNodes","newState","defError","prevState","App","definition","Container","width","height","window","location","hostname","match","rootReducer","combineReducers","formReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.51c4db06.chunk.js","sourcesContent":["import React from 'react'\r\nimport * as reactstrap from 'reactstrap'\r\nconst { Col: RSCol } = reactstrap\r\n\r\nexport const Col = ({ hide, children, layout, ...rest }) => {\r\n  if (hide === true) {\r\n    return null\r\n  }\r\n  if (layout) {\r\n    return <RSCol {...layout} {...rest}>{children}</RSCol>\r\n  } else {\r\n    return <RSCol {...rest}>{children}</RSCol>\r\n  }\r\n}\r\n","import React from 'react'\r\nimport * as reactstrap from 'reactstrap'\r\nconst { Row: RSRow } = reactstrap\r\n\r\nexport const Row = ({ hide, children, ...rest }) => {\r\n  if (hide === true) {\r\n    return null\r\n  }\r\n  return <RSRow {...rest}>{children}</RSRow>\r\n}\r\n","import React from 'react'\r\n\r\nexport const FormBoxContext = React.createContext(\r\n    {\r\n        loading: false,\r\n        readonly: false,\r\n        componentEffects: {}\r\n    }\r\n)","import React from 'react'\nimport { Col, FormGroup, FormText, Label } from 'reactstrap'\nimport { FormBoxContext } from './FormBoxContext'\nimport _ from 'lodash'\nimport LoadingOverlay from 'react-loading-overlay'\n\nexport const FieldLayoutSizes = {\n  Full: { sm: 12, md: 12, lg: 12, xl: 12 },\n  Half: { sm: 12, md: 6, lg: 6, xl: 6 },\n  Third: { sm: 12, md: 4, lg: 4, xl: 4 },\n  Quarter: { sm: 12, md: 3, lg: 3, xl: 3 },\n  One: { sm: 12, md: 1, lg: 1, xl: 1 },\n  Two: { sm: 12, md: 2, lg: 2, xl: 2 },\n  Three: { sm: 12, md: 3, lg: 3, xl: 3 },\n  Four: { sm: 12, md: 4, lg: 4, xl: 4 },\n  Five: { sm: 12, md: 5, lg: 5, xl: 5 },\n  Six: { sm: 12, md: 6, lg: 6, xl: 6 },\n  Seven: { sm: 12, md: 7, lg: 7, xl: 7 },\n  Eight: { sm: 12, md: 8, lg: 8, xl: 8 },\n  Nine: { sm: 12, md: 9, lg: 9, xl: 9 },\n  Ten: { sm: 12, md: 10, lg: 10, xl: 10 },\n  Eleven: { sm: 12, md: 11, lg: 11, xl: 11 },\n  Middle: { sm: { size: 12, offset: 0 }, md: { size: 10, offset: 2 }, lg: { size: 6, offset: 3 }, xl: { size: 4, offset: 4 } }\n}\n\nexport class FieldLayoutBox extends React.Component {\n  static contextType = FormBoxContext\n  \n  static defaultProps = {\n    hide: false,\n    formGroupProps: null\n  }\n\n  render () {\n    const { id, meta, label, caption, layout, hide, readonly, input: { value, onChange, onBlur, name, onFocus }, placeHolder, children, isCheckBox, formGroupProps } = this.props\n    const { loading, readonly: contextReadonly, componentEffects = {} } = this.context\n\n    let effectReadOnly = false\n    let effectHide = false\n\n    if (_.has(componentEffects, id)) {\n      effectReadOnly = componentEffects[id].readonly\n      effectHide = componentEffects[id].hide\n    }\n  \n    if (hide || effectHide) {\n      return null\n    }\n\n    let showError = false\n    showError = meta.touched === true & meta.invalid === true\n    let errorMessage = showError ? meta.error || '' : ''\n\n    if (_.isArray(errorMessage) === true) {\n      showError = false\n      console.log(errorMessage)\n    }\n\n    const ctrl = <LoadingOverlay\n      active={loading}\n      classNamePrefix='fieldloading_'\n      styles={{\n        wrapper: {},\n        overlay: { opacity: '.5' },\n        content: {},\n        spinner: {}\n      }}\n    >{children({\n        showError,\n        value,\n        onChange,\n        onBlur,\n        name,\n        onFocus,\n        placeHolder,\n        loading,\n        readonly: readonly || effectReadOnly || contextReadonly || false\n      })}\n    </LoadingOverlay>\n\n    const fieldLayout = (\n      <FormGroup {...formGroupProps} check={isCheckBox}>\n        {label\n          ? <Label check={isCheckBox}>{\n            isCheckBox\n              ? <React.Fragment>{ctrl}{' '}{label}</React.Fragment>\n              : label\n          }</Label>\n          : null\n        }\n        {\n          isCheckBox\n            ? null\n            : ctrl\n        }\n        {showError\n          ? <span>{errorMessage}</span>\n          : null\n        }\n        {caption\n          ? <FormText>{caption}</FormText>\n          : null\n        }\n      </FormGroup>\n    )\n\n    if (layout) {\n      let colStyle = isCheckBox\n        ? {\n          display: 'flex',\n          alignItems: 'center'\n        }\n        : {}\n\n      return (<Col {...layout} style={colStyle}>\n        {fieldLayout}\n      </Col>)\n    } else {\n      return fieldLayout\n    }\n  }\n}\n","import _ from 'lodash'\nimport moment from 'moment'\n\nexport const FieldValueConverters = {\n  Boolean: 'Boolean',\n  Int: 'Int',\n  Number: 'Number',\n  TimeZoneData: 'TimeZoneData',\n  CascaderData: 'CascaderData',\n  Date: 'Date',\n  TextUpper: 'TextUpper',\n  TextLower: 'TextLower',\n  TextNoSpaces: 'TextNoSpaces',\n  TextArray: 'TextArray',\n  Text: 'Text'\n}\n\nexport const FieldValueFormatter = (formatter) => {\n  if (_.isString(formatter)) {\n    switch (formatter) {\n      case FieldValueConverters.Boolean:\n        return (v, n) => {\n          if (_.isString(v)) {\n            return v === 'true'\n          } else if (_.isBoolean(v)) {\n            return v\n          } else {\n            return v == 'true'\n          }\n        }\n\n        \n      case FieldValueConverters.Date:\n        return (v, n) => {\n          if (_.isString(v)) {\n            return moment(v)\n          } else if (moment.isMoment(v)) {\n            return v\n          } else if (_.isDate(v)) {\n            return moment(v)\n          } else if (v !== null & v !== undefined) {\n            console.log(v)\n            throw Error('Can only convert from Strings or Date')\n          } else {\n            return v\n          }\n        }\n      case FieldValueConverters.Int:\n        return (v, n) => { return parseInt(v) }\n      case FieldValueConverters.Number:\n        return (v, n) => { return Number(v) }\n      case FieldValueConverters.TimeZoneData:\n        return (v, n) => {\n          const parts = _.split(v, '/')\n          const firstPart = parts.shift()\n          return [\n            firstPart,\n            `${firstPart}/${_.join(parts, '/')}`\n          ]\n        }\n      case FieldValueConverters.CascaderData:\n        return (v, n) => {\n          const parts = _.split(v, '/')\n          return parts\n        }\n      case FieldValueConverters.TextArray:\n        return (v, n) => {\n          if (_.isArray(v)) {\n            return v[0]\n          } else {\n            return v\n          }\n        }\n      case FieldValueConverters.Text:\n        return (v, n) => { return _.toString(v) }\n      default:\n        return null\n    }\n  } else {\n    return null\n  }\n}\n\nexport const FieldValueParser = (parser) => {\n  if (_.isString(parser)) {\n    switch (parser) {\n      case FieldValueConverters.Date:\n        return (v, n) => {\n          if (_.isString(v)) {\n            return moment(v).toDate()\n          } else if (moment.isMoment(v)) {\n            return v\n          } else if (_.isDate(v)) {\n            return v\n          } else if (moment.isMoment(v)) {\n            return v.toDate()\n          } else if (v !== null & v !== undefined) {\n            console.log(v)\n            throw Error('Can only convert from Strings or Date')\n          } else {\n            return v\n          }\n        }\n      case FieldValueConverters.Boolean:\n        return (v, n) => {\n          if (_.isString(v)) {\n            return v === 'true'\n          } else if (_.isBoolean(v)) {\n            return v\n          } else {\n            return v == 'true'\n          }\n        }\n      case FieldValueConverters.Int:\n        return (v, n) => { return parseInt(v) }\n      case FieldValueConverters.Number:\n        return (v, n) => { return Number(v) }\n      case FieldValueConverters.TimeZoneData:\n      case FieldValueConverters.CascaderData:\n        return (v, n) => {\n          const part = _.last(v)\n          return part\n        }\n      case FieldValueConverters.TextUpper:\n        return (v, n) => { return _.toUpper(v) }\n      case FieldValueConverters.TextLower:\n        return (v, n) => { return _.toLower(v) }\n      case FieldValueConverters.TextNoSpaces:\n        return (v, n) => { return _.replace(v, ' ', '') }\n      case FieldValueConverters.TextArray:\n        return (v, n) => {\n          return [v]\n        }\n      case FieldValueConverters.Text:\n        return (v, n) => { return _.toString(v) }\n      default:\n        return null\n    }\n  } else {\n    return null\n  }\n}\n\nfunction walkOptions (options, searchValue, collectedData, propNames) {\n  for (var option of options) {\n    if (option[propNames.valueProp] === searchValue) {\n      collectedData.push(_.pick(option, [propNames.textProp, propNames.valueProp]))\n      return\n    }\n    if (_.isArray(option[propNames.childrenProp])) {\n      collectedData.push(_.pick(option, [propNames.textProp, propNames.valueProp]))\n      walkOptions(option[propNames.childrenProp], searchValue, collectedData, propNames)\n    }\n  }\n}\n\nexport const LookupValueFormatter = (options, value, valueProp = 'Value', textProp = 'Text', childrenProp = 'Children') => {\n  if (!options || !value) {\n    return {\n      Text: '',\n      Keys: []\n    }\n  }\n\n  const searchOptions = _.clone(options) || []\n  const searchValue = _.isArray(value) ? _.last(value) : value\n  let displayValues = []\n\n  for (var searchOption of searchOptions) {\n    walkOptions([searchOption], searchValue, displayValues, { valueProp, textProp, childrenProp })\n    if (searchValue === (_.last(displayValues) || {})[valueProp]) {\n      break\n    }\n    displayValues = []\n  }\n  if (displayValues.length > 0) {\n    return {\n      Text: _.join(_.map(displayValues, textProp), ' / '),\n      Keys: _.map(displayValues, valueProp)\n    }\n  } else {\n    return {\n      Text: '',\n      Keys: []\n    }\n  }\n}\n","import React from 'react'\nimport { Field } from 'redux-form'\nimport { FieldLayoutBox } from './FieldLayoutBox'\nimport { FieldValueFormatter, FieldValueParser, FieldValueConverters } from './FieldValueConverters'\nimport { Input } from 'reactstrap'\nimport { BooleanFormatter } from './Formatters/BooleanFormatter'\n\nclass CheckBoxClass extends React.Component {\n  static defaultProps = {\n    readonlyTrueValue: 'Yes',\n    readonlyFalseValue: 'No'\n  }\n\n  render () {\n    const { readonlyTrueValue, readonlyFalseValue, ...rest } = this.props\n    return (\n      <FieldLayoutBox {...rest} isCheckBox={true}>\n        {({ showError, value, onChange, name, placeHolder, loading, readonly }) => {\n          if (readonly) {\n            var formattedValue = BooleanFormatter({ trueValue: readonlyTrueValue, falseValue: readonlyFalseValue, value: value })\n            return <Input type='text' readOnly name={`view${name}`} id={`view${name}`} value={formattedValue} />\n          } else {\n            return <Input type='checkbox' disabled={loading} invalid={showError} name={`text${name}`} id={`text${name}`} onChange={onChange} checked={value} />\n          }\n        }}\n      </FieldLayoutBox>\n    )\n  }\n};\n\nexport const CheckBox = ({ parse, format, fieldType = FieldValueConverters.Boolean, ...rest }) => { return <Field parse={fieldType ? FieldValueParser(fieldType) : parse} format={fieldType ? FieldValueFormatter(fieldType) : format} {...rest} component={CheckBoxClass} /> } // eslint-disable-line\nexport default CheckBox\n","export const BooleanFormatter = ({ trueValue = 'Yes', falseValue = 'No', value }) => {\n  return value === true ? trueValue : falseValue\n}\n","import React from 'react'\nimport _ from 'lodash'\nimport { reduxForm, submit } from 'redux-form'\nimport { Form } from 'reactstrap'\nimport { FormBoxContext } from './FormBoxContext'\n\nclass FormBoxPlain extends React.Component {\n  static defaultProps = {\n    destroyOnUnmount: true,\n    hideLoadingImage: false,\n    readonly: false,\n    simpleBody: false,\n    componentEffects: {}\n  }\n\n  onClick () {\n    const { dispatch, form } = this.props\n    dispatch(submit(form))\n  }\n\n  onCancel () {\n    this.props.onCancel()\n  }\n\n  render () {\n    const { componentEffects = {}, handleSubmit, onSubmit, loading, className, children, readonly } = this.props\n\n    return (\n      <React.Fragment>\n        <FormBoxContext.Provider value={{ loading: loading, readonly: readonly, componentEffects: componentEffects }}>\n          <Form className={className} onSubmit={(e) => { handleSubmit(onSubmit); e.preventDefault() }} >\n            {children}\n          </Form>\n        </FormBoxContext.Provider>\n        <span ref={this.onFormUnmount} />\n      </React.Fragment>\n    )\n  }\n};\n\nexport const FormBox = reduxForm({\n  enableReinitialize: true\n})(FormBoxPlain)\n","// https://github.com/waynebloss/react-delay-input/blob/master/src/Component.js\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport debounce from 'lodash/debounce'\r\n\r\nexport class DebounceInput extends React.PureComponent {\r\n  static propTypes = {\r\n    element: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n    type: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    onKeyDown: PropTypes.func,\r\n    onBlur: PropTypes.func,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n    minLength: PropTypes.number,\r\n    debounceTimeout: PropTypes.number,\r\n    forceNotifyByEnter: PropTypes.bool,\r\n    forceNotifyOnBlur: PropTypes.bool,\r\n    inputRef: PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {\r\n    element: 'input',\r\n    type: 'text',\r\n    onKeyDown: undefined,\r\n    onBlur: undefined,\r\n    value: undefined,\r\n    minLength: 0,\r\n    debounceTimeout: 100,\r\n    forceNotifyByEnter: true,\r\n    forceNotifyOnBlur: true,\r\n    inputRef: undefined\r\n  };\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.isDebouncing = false\r\n    this.state = { value: props.value || '' }\r\n\r\n    const { debounceTimeout } = this.props\r\n    this.createNotifier(debounceTimeout)\r\n  }\r\n\r\n  componentDidUpdate (prevProps) {\r\n    if (this.isDebouncing) {\r\n      return\r\n    }\r\n    const { value, debounceTimeout } = this.props\r\n\r\n    const { debounceTimeout: oldTimeout, value: oldValue } = prevProps\r\n    const { value: stateValue } = this.state\r\n\r\n    if (typeof value !== 'undefined' && oldValue !== value && stateValue !== value) {\r\n      // Update state.value if new value passed via props, yep re-render should happen\r\n      // eslint-disable-next-line react/no-did-update-set-state\r\n      this.setState({ value })\r\n    }\r\n    if (debounceTimeout !== oldTimeout) {\r\n      this.createNotifier(debounceTimeout)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    if (this.flush) {\r\n      this.flush()\r\n    }\r\n  }\r\n\r\n  onChange = event => {\r\n    event.persist()\r\n\r\n    const { value: oldValue } = this.state\r\n    const { minLength } = this.props\r\n\r\n    this.setState({ value: event.target.value }, () => {\r\n      const { value } = this.state\r\n\r\n      if (value.length >= minLength) {\r\n        this.notify(event)\r\n        return\r\n      }\r\n\r\n      // If user hits backspace and goes below minLength consider it cleaning the value\r\n      if (oldValue.length > value.length) {\r\n        this.notify({ ...event, target: { ...event.target, value: '' } })\r\n      }\r\n    })\r\n  };\r\n\r\n  onKeyDown = event => {\r\n    if (event.key === 'Enter') {\r\n      this.forceNotify(event)\r\n    }\r\n    // Invoke original onKeyDown if present\r\n    const { onKeyDown } = this.props\r\n    if (onKeyDown) {\r\n      event.persist()\r\n      onKeyDown(event)\r\n    }\r\n  };\r\n\r\n  onBlur = event => {\r\n    this.forceNotify(event)\r\n    // Invoke original onBlur if present\r\n    const { onBlur } = this.props\r\n    if (onBlur) {\r\n      event.persist()\r\n      onBlur(event)\r\n    }\r\n  };\r\n\r\n  createNotifier = debounceTimeout => {\r\n    if (debounceTimeout < 0) {\r\n      this.notify = () => null\r\n    } else if (debounceTimeout === 0) {\r\n      this.notify = this.doNotify\r\n    } else {\r\n      const debouncedChangeFunc = debounce(event => {\r\n        this.isDebouncing = false\r\n        this.doNotify(event)\r\n      }, debounceTimeout)\r\n\r\n      this.notify = event => {\r\n        this.isDebouncing = true\r\n        debouncedChangeFunc(event)\r\n      }\r\n\r\n      this.flush = () => debouncedChangeFunc.flush()\r\n\r\n      this.cancel = () => {\r\n        this.isDebouncing = false\r\n        debouncedChangeFunc.cancel()\r\n      }\r\n    }\r\n  };\r\n\r\n  doNotify = (...args) => {\r\n    const { onChange } = this.props\r\n\r\n    onChange(...args)\r\n  };\r\n\r\n  forceNotify = event => {\r\n    const { debounceTimeout } = this.props\r\n    if (!this.isDebouncing && debounceTimeout > 0) {\r\n      return\r\n    }\r\n\r\n    if (this.cancel) {\r\n      this.cancel()\r\n    }\r\n\r\n    const { value } = this.state\r\n    const { minLength } = this.props\r\n\r\n    if (value.length >= minLength) {\r\n      this.doNotify(event)\r\n    } else {\r\n      this.doNotify({ ...event, target: { ...event.target, value } })\r\n    }\r\n  };\r\n\r\n  render () {\r\n    const {\r\n      element,\r\n      onChange: _onChange,\r\n      value: _value,\r\n      minLength: _minLength,\r\n      debounceTimeout: _debounceTimeout,\r\n      forceNotifyByEnter,\r\n      forceNotifyOnBlur,\r\n      onKeyDown,\r\n      onBlur,\r\n      inputRef,\r\n      ...props\r\n    } = this.props\r\n    const { value } = this.state\r\n\r\n    let maybeOnKeyDown\r\n    if (forceNotifyByEnter) {\r\n      maybeOnKeyDown = { onKeyDown: this.onKeyDown }\r\n    } else if (onKeyDown) {\r\n      maybeOnKeyDown = { onKeyDown }\r\n    } else {\r\n      maybeOnKeyDown = {}\r\n    }\r\n\r\n    let maybeOnBlur\r\n    if (forceNotifyOnBlur) {\r\n      maybeOnBlur = { onBlur: this.onBlur }\r\n    } else if (onBlur) {\r\n      maybeOnBlur = { onBlur }\r\n    } else {\r\n      maybeOnBlur = {}\r\n    }\r\n\r\n    const maybeRef = inputRef ? { ref: inputRef } : {}\r\n\r\n    return React.createElement(element, {\r\n      ...props,\r\n      onChange: this.onChange,\r\n      value,\r\n      ...maybeOnKeyDown,\r\n      ...maybeOnBlur,\r\n      ...maybeRef\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport { FieldLayoutBox } from './FieldLayoutBox'\r\nimport { FieldValueFormatter, FieldValueParser } from './FieldValueConverters'\r\nimport { Input } from 'reactstrap'\r\nimport { DebounceInput } from './DelayInput/DelayInput'\r\nimport _ from 'lodash'\r\n\r\nclass TextBoxClass extends React.Component {\r\n  static defaultProps = {\r\n    delay: false\r\n  }\r\n\r\n  onChange (event) {\r\n    const { input: { onChange } } = this.props\r\n    if (_.isString(event)) {\r\n      onChange(event)\r\n    } else if (_.has(event, 'target.value')) {\r\n      onChange(event.target.value)\r\n    } else {\r\n      onChange(undefined)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { type, delay, ...rest } = this.props\r\n    var inputType = type || 'text'\r\n    return (\r\n      <FieldLayoutBox {...rest}>\r\n        {({ showError, value, onChange, name, placeHolder, loading, readonly }) => {\r\n          if (readonly) {\r\n            return <Input type='text' readOnly name={`view${name}`} id={`view${name}`} value={value} />\r\n          } else {\r\n            if (delay === true) {\r\n              return <DebounceInput className='form-control' minLength={2} delayTimeout={300} type={inputType} invalid={showError} name={`text${name}`} id={`text${name}`} placeholder={placeHolder} onChange={this.onChange.bind(this)} value={value} />\r\n            } else {\r\n              return <Input type={inputType} invalid={showError} name={`text${name}`} id={`text${name}`} placeholder={placeHolder} onChange={onChange} value={value} />\r\n            }\r\n          }\r\n        }}\r\n      </FieldLayoutBox>\r\n    )\r\n  }\r\n};\r\n\r\nexport const TextBox = ({ parse, format, fieldType, ...rest }) => { return <Field parse={fieldType ? FieldValueParser(fieldType) : parse} format={fieldType ? FieldValueFormatter(fieldType) : format} {...rest} component={TextBoxClass} /> } // eslint-disable-line\r\nexport default TextBox\r\n","import _ from 'lodash'\r\n\r\nexport const getPropChanges = (path, current, previous, defaultValue) => {\r\n    let cur = _.get(current, path, defaultValue)\r\n    let pre = _.get(previous, path, defaultValue)\r\n  \r\n    return {\r\n      Current: cur,\r\n      Previous: pre,\r\n      HasChanged: cur !== pre\r\n    }\r\n  }","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport { FieldLayoutBox } from './FieldLayoutBox'\r\nimport { LookupValueFormatter, FieldValueFormatter, FieldValueParser } from './FieldValueConverters'\r\nimport { Input } from 'reactstrap'\r\nimport _ from 'lodash'\r\n\r\nclass ComboBoxClass extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      autosetComplete: false,\r\n      optionsAvailable: false\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    valueProp: 'Value',\r\n    textProp: 'Text',\r\n    options: [],\r\n    noOptionsText: 'loading...',\r\n    autosetFirstOption: false\r\n  }\r\n\r\n  componentDidMount () {\r\n    const {\r\n      options = []\r\n    } = this.props\r\n    if (options.length > 0) {\r\n      this.setState({\r\n        optionsAvailable: true\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate ({\r\n    options: prevOptions = []\r\n  }, {\r\n    optionsAvailable: prevOptionsAvailable\r\n  }) {\r\n    const {\r\n      options: currOptions = [],\r\n      meta,\r\n      input,\r\n      valueProp,\r\n      autosetFirstOption\r\n    } = this.props\r\n\r\n    const {\r\n      optionsAvailable: currOptionsAvailable,\r\n      autosetComplete\r\n    } = this.state\r\n\r\n    if (prevOptionsAvailable === false & currOptionsAvailable === true) {\r\n      if (autosetFirstOption === true & autosetComplete === false) {\r\n        // only auto set if initial value is null\r\n        if (!meta.initial) {\r\n          let firstOption = currOptions[0] || {}\r\n          if (firstOption[valueProp]) {\r\n            input.onChange(firstOption[valueProp])\r\n          }\r\n        }\r\n        this.setState({\r\n          autosetComplete: true\r\n        })\r\n      }\r\n    }\r\n\r\n    if (prevOptions.length === 0 & currOptions.length > 0) {\r\n      if (currOptionsAvailable === false) {\r\n        this.setState({\r\n          optionsAvailable: true\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange (event) {\r\n    const { input: { onChange } } = this.props\r\n\r\n    onChange(event.target.value)\r\n  }\r\n\r\n  renderOptions (options, value) {\r\n    const { valueProp, textProp } = this.props\r\n\r\n    return _.map(options, (o, i) => {\r\n      const valuePropValue = o[valueProp || 'Value']\r\n      const textPropValue = o[textProp || 'Text']\r\n\r\n      return (\r\n        <option key={valuePropValue} value={valuePropValue}>{textPropValue || valuePropValue}</option>\r\n      )\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { options, valueProp, textProp, noOptionsText, ...rest } = this.props\r\n    const { optionsAvailable } = this.state\r\n    return (\r\n      <FieldLayoutBox {...rest}>\r\n        {({ showError, value, onChange, name, placeHolder, loading, readonly }) => {\r\n          if (optionsAvailable === true) {\r\n            if (readonly) {\r\n              return <Input type='text' readOnly name={`static${name}`} id={`static${name}`} value={LookupValueFormatter(options, value).Text} />\r\n            } else {\r\n              return <Input type='select' value={value} invalid={showError} name={`combo${name}`} id={`combo${name}`} placeholder={placeHolder} onChange={this.onChange.bind(this)}>\r\n                {this.renderOptions(options, value)}\r\n              </Input>\r\n            }\r\n          } else {\r\n            return <Input type='text' readOnly name={`comboloading${name}`} id={`comboloading${name}`} value={noOptionsText} />\r\n          }\r\n        }}\r\n      </FieldLayoutBox>\r\n    )\r\n  }\r\n}\r\n\r\nexport const ComboBox = ({ parse, format, fieldType, ...rest }) => { return <Field parse={fieldType ? FieldValueParser(fieldType) : parse} format={fieldType ? FieldValueFormatter(fieldType) : format} {...rest} component={ComboBoxClass} /> } // eslint-disable-line\r\nexport default ComboBox\r\n","import React from 'react'\r\n\r\nexport class CatchError extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      hasError: false,\r\n      error: null,\r\n      info: null\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromError (error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch (error, info) {\r\n    this.setState({\r\n      hasError: true,\r\n      error: error,\r\n      info: info\r\n    })\r\n  }\r\n\r\n  renderError () {\r\n    const { error, info } = this.state\r\n    return <div className='text-center'>\r\n      <h3>Error <button name='redo' onClick={() => { this.setState({ hasError: false, error: null, info: null }) }}>Reload</button></h3>\r\n      <p><b>Message</b></p>\r\n      <p>{(error || {}).message}</p>\r\n      <p><b>Stack Trace</b></p>\r\n      <p>{(error || {}).stack}</p>\r\n      <p><b>Component Trace</b></p>\r\n      <p>{(info || {}).componentStack}</p>\r\n    </div>\r\n  }\r\n\r\n  render () {\r\n    const { children } = this.props\r\n    const { hasError } = this.state\r\n\r\n    if (hasError) {\r\n      return this.renderError()\r\n    }\r\n\r\n    return children\r\n  }\r\n}\r\n","import React from 'react'\r\nimport * as C from './Core/index'\r\nimport _ from 'lodash'\r\nimport { CatchError } from './Core/index'\r\n\r\nexport class DynamicForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n\r\n        this.state = {\r\n            bodyNodes: null,\r\n            definitions: [],\r\n            errors: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { Definition } = this.props\r\n        let newState = this.parseDefinition(Definition)\r\n        if (newState.defError === undefined) {\r\n            newState.bodyNodes = this.buildDefinition(newState.definitions)\r\n        }\r\n        this.setState(newState)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const def = C.getPropChanges('Definition', this.props, prevProps, '')\r\n\r\n        if (def.HasChanged) {\r\n            let newState = this.parseDefinition(def.Current)\r\n            if (newState.errors.length === 0) {\r\n                try {\r\n                    newState.bodyNodes = this.buildDefinition(newState.definitions)\r\n                } catch (err) {\r\n                    newState.errors.push('Can not build definition')\r\n                    newState.errors.push(err.message)\r\n                }\r\n\r\n            }\r\n            this.setState(newState)\r\n        }\r\n    }\r\n\r\n    parseDefinition = (Definition) => {\r\n\r\n        let ret = {\r\n            definitions: [],\r\n            errors: []\r\n        }\r\n\r\n        try {\r\n            ret.definitions = JSON.parse(Definition)\r\n        } catch (err) {\r\n            ret.errors.push('Can not parse definition')\r\n            ret.errors.push(err.message)\r\n        }\r\n\r\n        return ret\r\n    }\r\n\r\n    buildDefinition = (definitions) => {\r\n        const nodes = []\r\n\r\n        for (let def of definitions) {\r\n            nodes.push(this.buildDefinitionElement(def))\r\n        }\r\n        return nodes\r\n    }\r\n\r\n    buildDefinitionElement = (def = {}) => {\r\n\r\n        let children = null\r\n\r\n        if (_.isArray(def.children)) {\r\n            children = []\r\n\r\n            for (let childDef of def.children) {\r\n                children.push(this.buildDefinitionElement(childDef))\r\n            }\r\n        }\r\n\r\n        if (_.isString(def.children)) {\r\n            children = def.children\r\n        }\r\n\r\n        let defProps = _.clone(def.props)\r\n        if (_.has(defProps, 'layout')) {\r\n            defProps.layout = C.FieldLayoutSizes[defProps.layout] || C.FieldLayoutSizes.Full\r\n        }\r\n\r\n        if (/[A-Z]/.test( def.component[0])) {\r\n            return React.createElement(C[def.component], defProps, children)\r\n        } else {\r\n            return React.createElement(def.component, defProps, children)\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { bodyNodes, errors = [] } = this.state\r\n\r\n        if (errors.length > 0) {\r\n            return <ul>\r\n                {_.map(errors, (e) => <li>{e}</li>)}\r\n            </ul>\r\n        } else {\r\n            return <CatchError>\r\n                {bodyNodes || null}\r\n            </CatchError>\r\n\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\nimport { Container } from 'reactstrap'\nimport './App.css';\nimport { FormBox, Row, FieldLayoutSizes, TextBox, CheckBox, ComboBox } from './Controls/Core/index'\nimport { DynamicForm } from './Controls/DynamicForm'\n\nconst formDef = `\n    [\n      { \n          \"id\": \"auto\",\n          \"component\": \"Row\",\n          \"children\": [\n              {\n                  \"id\": \"auto\",\n                  \"component\": \"TextBox\",\n                  \"props\": {\n                      \"name\": \"PatientFName\",\n                      \"label\": \"First Name\",\n                      \"layout\": \"Half\"\n                  }\n              },\n              {\n                  \"id\": \"auto\",\n                  \"component\": \"TextBox\",\n                  \"props\": {\n                      \"name\": \"PatientLName\",\n                      \"label\": \"Last Name\",\n                      \"layout\": \"Half\"\n                  }\n              }\n          ]\n      },\n      { \n          \"id\": \"auto\",\n          \"component\": \"Row\",\n          \"children\": [\n              {\n                  \"id\": \"auto\",\n                  \"component\": \"CheckBox\",\n                  \"props\": {\n                      \"name\": \"IsHome\",\n                      \"label\": \"Is Home\",\n                      \"layout\": \"Full\"\n                  }\n              }\n          ]\n      }\n  ]`\n\nclass App extends React.Component {\n\n  constructor (props) {\n    super(props) \n\n    this.state = {\n      definition: '[]'\n    }\n  }\n\n  render() {\n    const { definition } = this.state\n    // let eff = { txtFirstName: { hide: true }, txtLastName: { readonly: true }}\n    let eff = {}\n\n    return (\n      <div className='mainroot'>\n        <div className='main'>\n          <div className='mb-5'></div>\n          <Container>\n            <FormBox form='OasisSection' componentEffects={eff}>\n              <DynamicForm Definition={definition} />\n            </FormBox>\n          </Container>\n        </div>\n        <div className='scripts'>\n          <textarea style={{ width: '98%', height: '100%' }} onChange={(event) => { this.setState({\n              definition: event.target.value\n            })}} value={definition} />\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst rootReducer = combineReducers({\r\n  // ...your other reducers here\r\n  // you have to pass formReducer under 'form' key,\r\n  // for custom keys look up the docs for 'getFormState'\r\n  form: formReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { store } from './Redux/store'\n\nReactDOM.render(<ReduxProvider store={store}><App /></ReduxProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}